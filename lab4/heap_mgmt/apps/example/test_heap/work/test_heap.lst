 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 544
    4                      ; Text size: 4684
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  74657374	.ascii "test heap (%d): Creating heap tests\n\000"
   82  00003004  20686561	
   82  00003008  70202825	
   82  0000300c  64293a20	
   82  00003010  43726561	
   82  00003014  74696e67	
   82  00003018  20686561	
   82  0000301c  70207465	
   82  00003020  7374730a	
   82  00003024  00      	
   83  00003025          	.align 2
   84  00003028          	LC1_LF0:
   85  00003028  2d2d2d2d	.ascii "----------------------------------------------------------------------"
   85  0000302c  2d2d2d2d	
   85  00003030  2d2d2d2d	
   85  00003034  2d2d2d2d	
   85  00003038  2d2d2d2d	
   85  0000303c  2d2d2d2d	
   85  00003040  2d2d2d2d	
   85  00003044  2d2d2d2d	
   85  00003048  2d2d2d2d	
   85  0000304c  2d2d2d2d	
   85  00003050  2d2d2d2d	
   85  00003054  2d2d2d2d	
   85  00003058  2d2d2d2d	
   85  0000305c  2d2d2d2d	
   85  00003060  2d2d2d2d	
   85  00003064  2d2d2d2d	
   85  00003068  2d2d2d2d	
   85  0000306c  2d2d    	
   86  0000306e  2d2d2d2d	.ascii "---------------\n\000"
   86  00003072  2d2d2d2d	
   86  00003076  2d2d2d2d	
   86  0000307a  2d2d2d0a	
   86  0000307e  00      	
   87  0000307f          	.align 2
   88  00003080          	LC2_LF0:
   89  00003080  4d616c6c	.ascii "Malloc with memsize=80\n\000"
   89  00003084  6f632077	
   89  00003088  69746820	
   89  0000308c  6d656d73	
   89  00003090  697a653d	
   89  00003094  38300a00	
   90  00003098          	.align 2
   91  00003098          	LC3_LF0:
   92  00003098  4661696c	.ascii "Fail to malloc for test1 in test_heap\n\000"
   92  0000309c  20746f20	
   92  000030a0  6d616c6c	
   92  000030a4  6f632066	
   92  000030a8  6f722074	
   92  000030ac  65737431	
   92  000030b0  20696e20	
   92  000030b4  74657374	
   92  000030b8  5f686561	
   92  000030bc  700a00  	
   93  000030bf          	.align 2
   94  000030c0          	LC4_LF0:
   95  000030c0  74657374	.ascii "test1 allocated\n\000"
   95  000030c4  3120616c	
   95  000030c8  6c6f6361	
   95  000030cc  7465640a	
   95  000030d0  00      	
   96  000030d1          	.align 2
   97  000030d4          	LC5_LF0:
   98  000030d4  74657374	.ascii "test1 freed (%d bytes freed)\n\000"
   98  000030d8  31206672	
   98  000030dc  65656420	
   98  000030e0  28256420	
   98  000030e4  62797465	
   98  000030e8  73206672	
   98  000030ec  65656429	
   98  000030f0  0a00    	
   99  000030f2          	.align 2
  100  000030f4          	LC6_LF0:
  101  000030f4  4d616c6c	.ascii "Malloc with memsize=256\n\000"
  101  000030f8  6f632077	
  101  000030fc  69746820	
  101  00003100  6d656d73	
  101  00003104  697a653d	
  101  00003108  3235360a	
  101  0000310c  00      	
  102  0000310d          	.align 2
  103  00003110          	LC7_LF0:
  104  00003110  4661696c	.ascii "Fail to malloc for test2 in test_heap\n\000"
  104  00003114  20746f20	
  104  00003118  6d616c6c	
  104  0000311c  6f632066	
  104  00003120  6f722074	
  104  00003124  65737432	
  104  00003128  20696e20	
  104  0000312c  74657374	
  104  00003130  5f686561	
  104  00003134  700a00  	
  105  00003137          	.align 2
  106  00003138          	LC8_LF0:
  107  00003138  74657374	.ascii "test2 allocated\n\000"
  107  0000313c  3220616c	
  107  00003140  6c6f6361	
  107  00003144  7465640a	
  107  00003148  00      	
  108  00003149          	.align 2
  109  0000314c          	LC9_LF0:
  110  0000314c  74657374	.ascii "test2 freed (%d bytes freed)\n\000"
  110  00003150  32206672	
  110  00003154  65656420	
  110  00003158  28256420	
  110  0000315c  62797465	
  110  00003160  73206672	
  110  00003164  65656429	
  110  00003168  0a00    	
  111  0000316a          	.align 2
  112  0000316c          	LC10_LF0:
  113  0000316c  4d616c6c	.ascii "Malloc with memsize=2048\n\000"
  113  00003170  6f632077	
  113  00003174  69746820	
  113  00003178  6d656d73	
  113  0000317c  697a653d	
  113  00003180  32303438	
  113  00003184  0a00    	
  114  00003186          	.align 2
  115  00003188          	LC11_LF0:
  116  00003188  4661696c	.ascii "Fail to malloc for test3 in test_heap\n\000"
  116  0000318c  20746f20	
  116  00003190  6d616c6c	
  116  00003194  6f632066	
  116  00003198  6f722074	
  116  0000319c  65737433	
  116  000031a0  20696e20	
  116  000031a4  74657374	
  116  000031a8  5f686561	
  116  000031ac  700a00  	
  117  000031af          	.align 2
  118  000031b0          	LC12_LF0:
  119  000031b0  74657374	.ascii "test3 allocated\n\000"
  119  000031b4  3320616c	
  119  000031b8  6c6f6361	
  119  000031bc  7465640a	
  119  000031c0  00      	
  120  000031c1          	.align 2
  121  000031c4          	LC13_LF0:
  122  000031c4  74657374	.ascii "test3 freed (%d bytes freed)\n\000"
  122  000031c8  33206672	
  122  000031cc  65656420	
  122  000031d0  28256420	
  122  000031d4  62797465	
  122  000031d8  73206672	
  122  000031dc  65656429	
  122  000031e0  0a00    	
  123  000031e2          	.align 2
  124  000031e4          	LC14_LF0:
  125  000031e4  444f4e45	.ascii "DONE! test_heap (%d): All heap tests completed, exiting...\n\000"
  125  000031e8  21207465	
  125  000031ec  73745f68	
  125  000031f0  65617020	
  125  000031f4  28256429	
  125  000031f8  3a20416c	
  125  000031fc  6c206865	
  125  00003200  61702074	
  125  00003204  65737473	
  125  00003208  20636f6d	
  125  0000320c  706c6574	
  125  00003210  65642c20	
  125  00003214  65786974	
  125  00003218  696e672e	
  125  0000321c  2e2e0a00	
  126  00003220          	.text
  127  000010d4          	.align 2
  128  000010d4          	.proc _main
  129  000010d4          	.global _main
  130  000010d4          	_main:
  131                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  132  000010d4  afbefffc	sw	-4(r29),r30; push fp
  133  000010d8  001df020	add	r30,r0,r29; fp = sp
  134  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  135  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  136  000010e4  0c00115c	jal	___main
  137  000010e8  54000000	nop; not filled.
  138  000010ec  0c0002a0	jal	_getpid
  139  000010f0  54000000	nop; not filled.
  140  000010f4  23bdfff8	addi	r29,r29,#-8
  141  000010f8  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  142  000010fc  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  143  00001100  afa40000	sw	(r29),r4
  144  00001104  afa10004	sw	4(r29),r1
  145  00001108  0c000278	jal	_Printf
  146  0000110c  54000000	nop; not filled.
  147  00001110  3c030000	lhi	r3,((LC1_LF0)>>16)&0xffff
  148  00001114  24633028	addui	r3,r3,(LC1_LF0)&0xffff
  149  00001118  afa30000	sw	(r29),r3
  150  0000111c  0c000264	jal	_Printf
  151  00001120  54000000	nop; not filled.
  152  00001124  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  153  00001128  24843080	addui	r4,r4,(LC2_LF0)&0xffff
  154  0000112c  afa40000	sw	(r29),r4
  155  00001130  0c000250	jal	_Printf
  156  00001134  54000000	nop; not filled.
  157  00001138  20040050	addi	r4,r0,#80
  158  0000113c  afa40000	sw	(r29),r4
  159  00001140  0c000354	jal	_malloc
  160  00001144  54000000	nop; not filled.
  161  00001148  00011020	add	r2,r0,r1
  162  0000114c  23bd0008	addi	r29,r29,#8
  163  00001150  64410000	snei	r1,r2,#0
  164  00001154  14200020	bnez	r1,L14_LF0
  165  00001158  54000000	nop; not filled.
  166  0000115c  23bdfff8	addi	r29,r29,#-8
  167  00001160  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  168  00001164  24843098	addui	r4,r4,(LC3_LF0)&0xffff
  169  00001168  afa40000	sw	(r29),r4
  170  0000116c  0c000214	jal	_Printf
  171  00001170  54000000	nop; not filled.
  172  00001174  23bd0008	addi	r29,r29,#8
  173  00001178          	L14_LF0:
  174  00001178  23bdfff8	addi	r29,r29,#-8
  175  0000117c  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  176  00001180  248430c0	addui	r4,r4,(LC4_LF0)&0xffff
  177  00001184  afa40000	sw	(r29),r4
  178  00001188  0c0001f8	jal	_Printf
  179  0000118c  54000000	nop; not filled.
  180  00001190  afa20000	sw	(r29),r2
  181  00001194  0c000308	jal	_mfree
  182  00001198  54000000	nop; not filled.
  183  0000119c  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  184  000011a0  248430d4	addui	r4,r4,(LC5_LF0)&0xffff
  185  000011a4  afa40000	sw	(r29),r4
  186  000011a8  afa10004	sw	4(r29),r1
  187  000011ac  0c0001d4	jal	_Printf
  188  000011b0  54000000	nop; not filled.
  189  000011b4  afa30000	sw	(r29),r3
  190  000011b8  0c0001c8	jal	_Printf
  191  000011bc  54000000	nop; not filled.
  192  000011c0  afa30000	sw	(r29),r3
  193  000011c4  0c0001bc	jal	_Printf
  194  000011c8  54000000	nop; not filled.
  195  000011cc  3c040000	lhi	r4,((LC6_LF0)>>16)&0xffff
  196  000011d0  248430f4	addui	r4,r4,(LC6_LF0)&0xffff
  197  000011d4  afa40000	sw	(r29),r4
  198  000011d8  0c0001a8	jal	_Printf
  199  000011dc  54000000	nop; not filled.
  200  000011e0  20040100	addi	r4,r0,#256
  201  000011e4  afa40000	sw	(r29),r4
  202  000011e8  0c0002ac	jal	_malloc
  203  000011ec  54000000	nop; not filled.
  204  000011f0  00011020	add	r2,r0,r1
  205  000011f4  23bd0008	addi	r29,r29,#8
  206  000011f8  64410000	snei	r1,r2,#0
  207  000011fc  14200020	bnez	r1,L15_LF0
  208  00001200  54000000	nop; not filled.
  209  00001204  23bdfff8	addi	r29,r29,#-8
  210  00001208  3c040000	lhi	r4,((LC7_LF0)>>16)&0xffff
  211  0000120c  24843110	addui	r4,r4,(LC7_LF0)&0xffff
  212  00001210  afa40000	sw	(r29),r4
  213  00001214  0c00016c	jal	_Printf
  214  00001218  54000000	nop; not filled.
  215  0000121c  23bd0008	addi	r29,r29,#8
  216  00001220          	L15_LF0:
  217  00001220  23bdfff8	addi	r29,r29,#-8
  218  00001224  3c040000	lhi	r4,((LC8_LF0)>>16)&0xffff
  219  00001228  24843138	addui	r4,r4,(LC8_LF0)&0xffff
  220  0000122c  afa40000	sw	(r29),r4
  221  00001230  0c000150	jal	_Printf
  222  00001234  54000000	nop; not filled.
  223  00001238  afa20000	sw	(r29),r2
  224  0000123c  0c000260	jal	_mfree
  225  00001240  54000000	nop; not filled.
  226  00001244  3c040000	lhi	r4,((LC9_LF0)>>16)&0xffff
  227  00001248  2484314c	addui	r4,r4,(LC9_LF0)&0xffff
  228  0000124c  afa40000	sw	(r29),r4
  229  00001250  afa10004	sw	4(r29),r1
  230  00001254  0c00012c	jal	_Printf
  231  00001258  54000000	nop; not filled.
  232  0000125c  afa30000	sw	(r29),r3
  233  00001260  0c000120	jal	_Printf
  234  00001264  54000000	nop; not filled.
  235  00001268  afa30000	sw	(r29),r3
  236  0000126c  0c000114	jal	_Printf
  237  00001270  54000000	nop; not filled.
  238  00001274  3c040000	lhi	r4,((LC10_LF0)>>16)&0xffff
  239  00001278  2484316c	addui	r4,r4,(LC10_LF0)&0xffff
  240  0000127c  afa40000	sw	(r29),r4
  241  00001280  0c000100	jal	_Printf
  242  00001284  54000000	nop; not filled.
  243  00001288  20040800	addi	r4,r0,#2048
  244  0000128c  afa40000	sw	(r29),r4
  245  00001290  0c000204	jal	_malloc
  246  00001294  54000000	nop; not filled.
  247  00001298  00011020	add	r2,r0,r1
  248  0000129c  23bd0008	addi	r29,r29,#8
  249  000012a0  64410000	snei	r1,r2,#0
  250  000012a4  14200020	bnez	r1,L16_LF0
  251  000012a8  54000000	nop; not filled.
  252  000012ac  23bdfff8	addi	r29,r29,#-8
  253  000012b0  3c040000	lhi	r4,((LC11_LF0)>>16)&0xffff
  254  000012b4  24843188	addui	r4,r4,(LC11_LF0)&0xffff
  255  000012b8  afa40000	sw	(r29),r4
  256  000012bc  0c0000c4	jal	_Printf
  257  000012c0  54000000	nop; not filled.
  258  000012c4  23bd0008	addi	r29,r29,#8
  259  000012c8          	L16_LF0:
  260  000012c8  23bdfff8	addi	r29,r29,#-8
  261  000012cc  3c040000	lhi	r4,((LC12_LF0)>>16)&0xffff
  262  000012d0  248431b0	addui	r4,r4,(LC12_LF0)&0xffff
  263  000012d4  afa40000	sw	(r29),r4
  264  000012d8  0c0000a8	jal	_Printf
  265  000012dc  54000000	nop; not filled.
  266  000012e0  afa20000	sw	(r29),r2
  267  000012e4  0c0001b8	jal	_mfree
  268  000012e8  54000000	nop; not filled.
  269  000012ec  3c040000	lhi	r4,((LC13_LF0)>>16)&0xffff
  270  000012f0  248431c4	addui	r4,r4,(LC13_LF0)&0xffff
  271  000012f4  afa40000	sw	(r29),r4
  272  000012f8  afa10004	sw	4(r29),r1
  273  000012fc  0c000084	jal	_Printf
  274  00001300  54000000	nop; not filled.
  275  00001304  afa30000	sw	(r29),r3
  276  00001308  0c000078	jal	_Printf
  277  0000130c  54000000	nop; not filled.
  278  00001310  0c00007c	jal	_getpid
  279  00001314  54000000	nop; not filled.
  280  00001318  3c040000	lhi	r4,((LC14_LF0)>>16)&0xffff
  281  0000131c  248431e4	addui	r4,r4,(LC14_LF0)&0xffff
  282  00001320  afa40000	sw	(r29),r4
  283  00001324  afa10004	sw	4(r29),r1
  284  00001328  0c000058	jal	_Printf
  285  0000132c  54000000	nop; not filled.
  286  00001330  23bd0008	addi	r29,r29,#8
  287  00001334  0c000f00	jal	_exit
  288  00001338  54000000	nop
  289  0000133c          	.endproc _main
  290                      ;;;
  291                      ;;; Stub functions for DLX traps.
  292                      ;;;
  293                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  294                      ;;;
  295                      ;;; The traps such as Open and Close
  296                      ;;; (note the capital letters) are for use by user programs.  The traps
  297                      ;;; with names such as open and close (lower case) are for use by the OS.
  298                      ;;;
  301  0000133c          	.align 2
  303                      ;;; The following are the traps to be used by user-level programs
  304                      ;;;
  306  0000133c          	.align 2
  307  0000133c          	.proc _Open
  308  0000133c          	.global _Open
  309  0000133c          	_Open:
  310                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  311                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  312                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  313  0000133c  44000213	trap	#0x213
  314  00001340  4be00000	jr	r31
  315  00001344  54000000	nop
  316  00001348          	.endproc _Open
  318  00001348          	.proc _Close
  319  00001348          	.global _Close
  320  00001348          	_Close:
  321  00001348  44000214	trap	#0x214
  322  0000134c  4be00000	jr	r31
  323  00001350  54000000	nop
  324  00001354          	.endproc _Close
  326  00001354          	.proc _Read
  327  00001354          	.global _Read
  328  00001354          	_Read:
  329  00001354  44000210	trap	#0x210
  330  00001358  4be00000	jr	r31
  331  0000135c  54000000	nop
  332  00001360          	.endproc _Read
  334  00001360          	.proc _Write
  335  00001360          	.global _Write
  336  00001360          	_Write:
  337  00001360  44000211	trap	#0x211
  338  00001364  4be00000	jr	r31
  339  00001368  54000000	nop
  340  0000136c          	.endproc _Write
  342  0000136c          	.proc _Lseek
  343  0000136c          	.global _Lseek
  344  0000136c          	_Lseek:
  345  0000136c  44000212	trap	#0x212
  346  00001370  4be00000	jr	r31
  347  00001374  54000000	nop
  348  00001378          	.endproc _Lseek
  350  00001378          	.proc _Putchar
  351  00001378          	.global _Putchar
  352  00001378          	_Putchar:
  353  00001378  44000280	trap	#0x280
  354  0000137c  4be00000	jr	r31
  355  00001380  54000000	nop
  356  00001384          	.endproc _Putchar
  358  00001384          	.proc _Printf
  359  00001384          	.global _Printf
  360  00001384          	_Printf:
  361  00001384  44000201	trap	#0x201
  362  00001388  4be00000	jr	r31
  363  0000138c  54000000	nop
  364  00001390          	.endproc _Printf
  366  00001390          	.proc _getpid
  367  00001390          	.global _getpid
  368  00001390          	_getpid:
  369  00001390  44000431	trap	#0x431
  370  00001394  4be00000	jr	r31
  371  00001398  54000000	nop
  372  0000139c          	.endproc _getpid
  374  0000139c          	.proc _process_create
  375  0000139c          	.global _process_create
  376  0000139c          	_process_create:
  377  0000139c  44000432	trap	#0x432
  378  000013a0  4be00000	jr	r31
  379  000013a4  54000000	nop
  380  000013a8          	.endproc _process_create
  382  000013a8          	.proc _shmget
  383  000013a8          	.global _shmget
  384  000013a8          	_shmget:
  385  000013a8  44000440	trap	#0x440
  386  000013ac  4be00000	jr	r31
  387  000013b0  54000000	nop
  388  000013b4          	.endproc _shmget
  390  000013b4          	.proc _shmat
  391  000013b4          	.global _shmat
  392  000013b4          	_shmat:
  393  000013b4  44000441	trap	#0x441
  394  000013b8  4be00000	jr	r31
  395  000013bc  54000000	nop
  396  000013c0          	.endproc _shmat
  398  000013c0          	.proc _sem_create
  399  000013c0          	.global _sem_create
  400  000013c0          	_sem_create:
  401  000013c0  44000450	trap	#0x450
  402  000013c4  4be00000	jr	r31
  403  000013c8  54000000	nop
  404  000013cc          	.endproc _sem_create
  406  000013cc          	.proc _sem_wait
  407  000013cc          	.global _sem_wait
  408  000013cc          	_sem_wait:
  409  000013cc  44000451	trap	#0x451
  410  000013d0  4be00000	jr	r31
  411  000013d4  54000000	nop
  412  000013d8          	.endproc _sem_wait
  414  000013d8          	.proc _sem_signal
  415  000013d8          	.global _sem_signal
  416  000013d8          	_sem_signal:
  417  000013d8  44000452	trap	#0x452
  418  000013dc  4be00000	jr	r31
  419  000013e0  54000000	nop
  420  000013e4          	.endproc _sem_signal
  422  000013e4          	.proc _lock_create
  423  000013e4          	.global _lock_create
  424  000013e4          	_lock_create:
  425  000013e4  44000453	trap	#0x453
  426  000013e8  4be00000	jr	r31
  427  000013ec  54000000	nop
  428  000013f0          	.endproc _lock_create
  430  000013f0          	.proc _lock_acquire
  431  000013f0          	.global _lock_acquire
  432  000013f0          	_lock_acquire:
  433  000013f0  44000454	trap	#0x454
  434  000013f4  4be00000	jr	r31
  435  000013f8  54000000	nop
  436  000013fc          	.endproc _lock_acquire
  438  000013fc          	.proc _lock_release
  439  000013fc          	.global _lock_release
  440  000013fc          	_lock_release:
  441  000013fc  44000455	trap	#0x455
  442  00001400  4be00000	jr	r31
  443  00001404  54000000	nop
  444  00001408          	.endproc _lock_release
  446  00001408          	.proc _cond_create
  447  00001408          	.global _cond_create
  448  00001408          	_cond_create:
  449  00001408  44000456	trap	#0x456
  450  0000140c  4be00000	jr	r31
  451  00001410  54000000	nop
  452  00001414          	.endproc _cond_create
  454  00001414          	.proc _cond_wait
  455  00001414          	.global _cond_wait
  456  00001414          	_cond_wait:
  457  00001414  44000457	trap	#0x457
  458  00001418  4be00000	jr	r31
  459  0000141c  54000000	nop
  460  00001420          	.endproc _cond_wait
  462  00001420          	.proc _cond_signal
  463  00001420          	.global _cond_signal
  464  00001420          	_cond_signal:
  465  00001420  44000458	trap	#0x458
  466  00001424  4be00000	jr	r31
  467  00001428  54000000	nop
  468  0000142c          	.endproc _cond_signal
  470  0000142c          	.proc _cond_broadcast
  471  0000142c          	.global _cond_broadcast
  472  0000142c          	_cond_broadcast:
  473  0000142c  44000459	trap	#0x459
  474  00001430  4be00000	jr	r31
  475  00001434  54000000	nop
  476  00001438          	.endproc _cond_broadcast
  478  00001438          	.proc _mbox_create
  479  00001438          	.global _mbox_create
  480  00001438          	_mbox_create:
  481  00001438  44000460	trap	#0x460
  482  0000143c  4be00000	jr	r31
  483  00001440  54000000	nop
  484  00001444          	.endproc _mbox_create
  486  00001444          	.proc _mbox_open
  487  00001444          	.global _mbox_open
  488  00001444          	_mbox_open:
  489  00001444  44000461	trap	#0x461
  490  00001448  4be00000	jr	r31
  491  0000144c  54000000	nop
  492  00001450          	.endproc _mbox_open
  494  00001450          	.proc _mbox_close
  495  00001450          	.global _mbox_close
  496  00001450          	_mbox_close:
  497  00001450  44000462	trap	#0x462
  498  00001454  4be00000	jr	r31
  499  00001458  54000000	nop
  500  0000145c          	.endproc _mbox_close
  502  0000145c          	.proc _mbox_send
  503  0000145c          	.global _mbox_send
  504  0000145c          	_mbox_send:
  505  0000145c  44000463	trap	#0x463
  506  00001460  4be00000	jr	r31
  507  00001464  54000000	nop
  508  00001468          	.endproc _mbox_send
  510  00001468          	.proc _mbox_recv
  511  00001468          	.global _mbox_recv
  512  00001468          	_mbox_recv:
  513  00001468  44000464	trap	#0x464
  514  0000146c  4be00000	jr	r31
  515  00001470  54000000	nop
  516  00001474          	.endproc _mbox_recv
  518  00001474          	.proc _sleep
  519  00001474          	.global _sleep
  520  00001474          	_sleep:
  521  00001474  44000465	trap	#0x465
  522  00001478  4be00000	jr	r31
  523  0000147c  54000000	nop
  524  00001480          	.endproc _sleep
  526  00001480          	.proc _yield
  527  00001480          	.global _yield
  528  00001480          	_yield:
  529  00001480  44000466	trap	#0x466
  530  00001484  4be00000	jr	r31
  531  00001488  54000000	nop
  532  0000148c          	.endproc _yield
  535  0000148c          	.proc _Exit
  536  0000148c          	.global _Exit
  537  0000148c          	_Exit:
  538  0000148c  44000500	trap	#0x500
  539  00001490  4be00000	jr	r31
  540  00001494  54000000	nop
  541  00001498          	.endproc _Exit
  544  00001498          	.proc _malloc
  545  00001498          	.global _malloc
  546  00001498          	_malloc:
  547  00001498  44000467	trap	#0x467
  548  0000149c  4be00000	jr	r31
  549  000014a0          	.endproc _malloc
  552  000014a0          	.proc _mfree
  553  000014a0          	.global _mfree
  554  000014a0          	_mfree:
  555  000014a0  44000468	trap	#0x468
  556  000014a4  4be00000	jr	r31
  557  000014a8          	.endproc _mfree
  558                      ; Compiled by GCC
  560  000014a8          	.align 2
  561  000014a8          	.proc _isspace
  562  000014a8          	.global _isspace
  563  000014a8          	_isspace:
  564                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  565  000014a8  afbefffc	sw	-4(r29),r30; push fp
  566  000014ac  001df020	add	r30,r0,r29; fp = sp
  567  000014b0  afbffff8	sw	-8(r29),r31; push ret addr
  568  000014b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  569  000014b8  afa20000	sw	0(r29),r2
  570  000014bc  afa30004	sw	4(r29),r3
  571  000014c0  afa40008	sw	8(r29),r4
  572  000014c4  83c20003	lb	r2,3(r30)
  573  000014c8  20010000	addi	r1,r0,#0
  574  000014cc  304300ff	andi	r3,r2,#0x00ff
  575  000014d0  60640020	seqi	r4,r3,#32
  576  000014d4  1480002c	bnez	r4,L3_LF2
  577  000014d8  54000000	nop; delay slot nop
  578  000014dc  304300ff	andi	r3,r2,#0x00ff
  579  000014e0  60640009	seqi	r4,r3,#9
  580  000014e4  1480001c	bnez	r4,L3_LF2
  581  000014e8  54000000	nop; delay slot nop
  582  000014ec  304300ff	andi	r3,r2,#0x00ff
  583  000014f0  6064000a	seqi	r4,r3,#10
  584  000014f4  1480000c	bnez	r4,L3_LF2
  585  000014f8  54000000	nop; delay slot nop
  586  000014fc  08000008	j	L2_LF2
  587  00001500  54000000	nop; delay slot nop
  588  00001504          	L3_LF2:
  589  00001504  20010001	addi	r1,r0,#1
  590  00001508          	L2_LF2:
  591  00001508  08000004	j	L1_LF2
  592  0000150c  54000000	nop; delay slot nop
  593  00001510          	L1_LF2:
  594  00001510  8fa20000	lw	r2,0(r29)
  595  00001514  8fa30004	lw	r3,4(r29)
  596  00001518  8fa40008	lw	r4,8(r29)
  597  0000151c  8fdffff8	lw	r31,-8(r30)
  598  00001520  001ee820	add	r29,r0,r30
  599  00001524  8fdefffc	lw	r30,-4(r30)
  600  00001528  4be00000	jr	r31
  601  0000152c  54000000	nop
  602  00001530          	.endproc _isspace
  603  00001530          	.align 2
  604  00001530          	.proc _isxdigit
  605  00001530          	.global _isxdigit
  606  00001530          	_isxdigit:
  607                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  608  00001530  afbefffc	sw	-4(r29),r30; push fp
  609  00001534  001df020	add	r30,r0,r29; fp = sp
  610  00001538  afbffff8	sw	-8(r29),r31; push ret addr
  611  0000153c  2fbd0018	subui	r29,r29,#24; alloc local storage
  612  00001540  afa20000	sw	0(r29),r2
  613  00001544  afa30004	sw	4(r29),r3
  614  00001548  afa40008	sw	8(r29),r4
  615  0000154c  83c20003	lb	r2,3(r30)
  616  00001550  20010000	addi	r1,r0,#0
  617  00001554  304300ff	andi	r3,r2,#0x00ff
  618  00001558  6c64002f	sgtui	r4,r3,#47
  619  0000155c  1080001c	beqz	r4,L7_LF2
  620  00001560  54000000	nop; delay slot nop
  621  00001564  304300ff	andi	r3,r2,#0x00ff
  622  00001568  70640039	sleui	r4,r3,#57
  623  0000156c  1480005c	bnez	r4,L6_LF2
  624  00001570  54000000	nop; delay slot nop
  625  00001574  08000004	j	L7_LF2
  626  00001578  54000000	nop; delay slot nop
  627  0000157c          	L7_LF2:
  628  0000157c  304300ff	andi	r3,r2,#0x00ff
  629  00001580  6c640060	sgtui	r4,r3,#96
  630  00001584  1080001c	beqz	r4,L8_LF2
  631  00001588  54000000	nop; delay slot nop
  632  0000158c  304300ff	andi	r3,r2,#0x00ff
  633  00001590  70640066	sleui	r4,r3,#102
  634  00001594  14800034	bnez	r4,L6_LF2
  635  00001598  54000000	nop; delay slot nop
  636  0000159c  08000004	j	L8_LF2
  637  000015a0  54000000	nop; delay slot nop
  638  000015a4          	L8_LF2:
  639  000015a4  304300ff	andi	r3,r2,#0x00ff
  640  000015a8  6c640040	sgtui	r4,r3,#64
  641  000015ac  10800020	beqz	r4,L5_LF2
  642  000015b0  54000000	nop; delay slot nop
  643  000015b4  304300ff	andi	r3,r2,#0x00ff
  644  000015b8  70640041	sleui	r4,r3,#65
  645  000015bc  1480000c	bnez	r4,L6_LF2
  646  000015c0  54000000	nop; delay slot nop
  647  000015c4  08000008	j	L5_LF2
  648  000015c8  54000000	nop; delay slot nop
  649  000015cc          	L6_LF2:
  650  000015cc  20010001	addi	r1,r0,#1
  651  000015d0          	L5_LF2:
  652  000015d0  08000004	j	L4_LF2
  653  000015d4  54000000	nop; delay slot nop
  654  000015d8          	L4_LF2:
  655  000015d8  8fa20000	lw	r2,0(r29)
  656  000015dc  8fa30004	lw	r3,4(r29)
  657  000015e0  8fa40008	lw	r4,8(r29)
  658  000015e4  8fdffff8	lw	r31,-8(r30)
  659  000015e8  001ee820	add	r29,r0,r30
  660  000015ec  8fdefffc	lw	r30,-4(r30)
  661  000015f0  4be00000	jr	r31
  662  000015f4  54000000	nop
  663  000015f8          	.endproc _isxdigit
  664  000015f8          	.align 2
  665  000015f8          	.proc _dstrcpy
  666  000015f8          	.global _dstrcpy
  667  000015f8          	_dstrcpy:
  668                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  669  000015f8  afbefffc	sw	-4(r29),r30; push fp
  670  000015fc  001df020	add	r30,r0,r29; fp = sp
  671  00001600  afbffff8	sw	-8(r29),r31; push ret addr
  672  00001604  2fbd0018	subui	r29,r29,#24; alloc local storage
  673  00001608  afa20000	sw	0(r29),r2
  674  0000160c  afa30004	sw	4(r29),r3
  675  00001610  8fc10000	lw	r1,(r30)
  676  00001614  afc1fff4	sw	-12(r30),r1
  677  00001618          	L10_LF2:
  678  00001618  8fc10000	lw	r1,(r30)
  679  0000161c  20220001	addi	r2,r1,#1
  680  00001620  afc20000	sw	(r30),r2
  681  00001624  8fc20004	lw	r2,4(r30)
  682  00001628  20430001	addi	r3,r2,#1
  683  0000162c  afc30004	sw	4(r30),r3
  684  00001630  80420000	lb	r2,(r2)
  685  00001634  a0220000	sb	(r1),r2
  686  00001638  a3c2fff3	sb	-13(r30),r2
  687  0000163c          	L12_LF2:
  688  0000163c  93c1fff3	lbu	r1,-13(r30)
  689  00001640  64220000	snei	r2,r1,#0
  690  00001644  1440000c	bnez	r2,L13_LF2
  691  00001648  54000000	nop; delay slot nop
  692  0000164c  0800000c	j	L11_LF2
  693  00001650  54000000	nop; delay slot nop
  694  00001654          	L13_LF2:
  695  00001654  0bffffc0	j	L10_LF2
  696  00001658  54000000	nop; delay slot nop
  697  0000165c          	L11_LF2:
  698  0000165c  8fc1fff4	lw	r1,-12(r30)
  699  00001660  08000004	j	L9_LF2
  700  00001664  54000000	nop; delay slot nop
  701  00001668          	L9_LF2:
  702  00001668  8fa20000	lw	r2,0(r29)
  703  0000166c  8fa30004	lw	r3,4(r29)
  704  00001670  8fdffff8	lw	r31,-8(r30)
  705  00001674  001ee820	add	r29,r0,r30
  706  00001678  8fdefffc	lw	r30,-4(r30)
  707  0000167c  4be00000	jr	r31
  708  00001680  54000000	nop
  709  00001684          	.endproc _dstrcpy
  710  00001684          	.align 2
  711  00001684          	.proc _dstrncpy
  712  00001684          	.global _dstrncpy
  713  00001684          	_dstrncpy:
  714                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  715  00001684  afbefffc	sw	-4(r29),r30; push fp
  716  00001688  001df020	add	r30,r0,r29; fp = sp
  717  0000168c  afbffff8	sw	-8(r29),r31; push ret addr
  718  00001690  2fbd0018	subui	r29,r29,#24; alloc local storage
  719  00001694  afa20000	sw	0(r29),r2
  720  00001698  afa30004	sw	4(r29),r3
  721  0000169c  8fc10000	lw	r1,(r30)
  722  000016a0  afc1fff4	sw	-12(r30),r1
  723  000016a4          	L15_LF2:
  724  000016a4  8fc10008	lw	r1,8(r30)
  725  000016a8  2022ffff	addi	r2,r1,#-1
  726  000016ac  afc20008	sw	8(r30),r2
  727  000016b0  70210000	slei	r1,r1,#0
  728  000016b4  1020000c	beqz	r1,L18_LF2
  729  000016b8  54000000	nop; delay slot nop
  730  000016bc  08000048	j	L16_LF2
  731  000016c0  54000000	nop; delay slot nop
  732  000016c4          	L18_LF2:
  733  000016c4  8fc10000	lw	r1,(r30)
  734  000016c8  20220001	addi	r2,r1,#1
  735  000016cc  afc20000	sw	(r30),r2
  736  000016d0  8fc20004	lw	r2,4(r30)
  737  000016d4  20430001	addi	r3,r2,#1
  738  000016d8  afc30004	sw	4(r30),r3
  739  000016dc  80420000	lb	r2,(r2)
  740  000016e0  a0220000	sb	(r1),r2
  741  000016e4  a3c2fff3	sb	-13(r30),r2
  742  000016e8          	L17_LF2:
  743  000016e8  93c1fff3	lbu	r1,-13(r30)
  744  000016ec  64220000	snei	r2,r1,#0
  745  000016f0  1440000c	bnez	r2,L19_LF2
  746  000016f4  54000000	nop; delay slot nop
  747  000016f8  0800000c	j	L16_LF2
  748  000016fc  54000000	nop; delay slot nop
  749  00001700          	L19_LF2:
  750  00001700  0bffffa0	j	L15_LF2
  751  00001704  54000000	nop; delay slot nop
  752  00001708          	L16_LF2:
  753  00001708  8fc1fff4	lw	r1,-12(r30)
  754  0000170c  08000004	j	L14_LF2
  755  00001710  54000000	nop; delay slot nop
  756  00001714          	L14_LF2:
  757  00001714  8fa20000	lw	r2,0(r29)
  758  00001718  8fa30004	lw	r3,4(r29)
  759  0000171c  8fdffff8	lw	r31,-8(r30)
  760  00001720  001ee820	add	r29,r0,r30
  761  00001724  8fdefffc	lw	r30,-4(r30)
  762  00001728  4be00000	jr	r31
  763  0000172c  54000000	nop
  764  00001730          	.endproc _dstrncpy
  765  00001730          	.align 2
  766  00001730          	.proc _dstrcat
  767  00001730          	.global _dstrcat
  768  00001730          	_dstrcat:
  769                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  770  00001730  afbefffc	sw	-4(r29),r30; push fp
  771  00001734  001df020	add	r30,r0,r29; fp = sp
  772  00001738  afbffff8	sw	-8(r29),r31; push ret addr
  773  0000173c  2fbd0018	subui	r29,r29,#24; alloc local storage
  774  00001740  afa20000	sw	0(r29),r2
  775  00001744  8fc10000	lw	r1,(r30)
  776  00001748  afc1fff4	sw	-12(r30),r1
  777  0000174c          	L21_LF2:
  778  0000174c  8fc10000	lw	r1,(r30)
  779  00001750  90220000	lbu	r2,(r1)
  780  00001754  64410000	snei	r1,r2,#0
  781  00001758  1420000c	bnez	r1,L23_LF2
  782  0000175c  54000000	nop; delay slot nop
  783  00001760  0800001c	j	L22_LF2
  784  00001764  54000000	nop; delay slot nop
  785  00001768          	L23_LF2:
  786  00001768  8fc20000	lw	r2,(r30)
  787  0000176c  20410001	addi	r1,r2,#1
  788  00001770  00011020	add	r2,r0,r1
  789  00001774  afc20000	sw	(r30),r2
  790  00001778  0bffffd0	j	L21_LF2
  791  0000177c  54000000	nop; delay slot nop
  792  00001780          	L22_LF2:
  793  00001780  23bdfff8	addi	r29,r29,#-8
  794  00001784  001d0820	add	r1,r0,r29
  795  00001788  8fc20000	lw	r2,(r30)
  796  0000178c  ac220000	sw	(r1),r2
  797  00001790  8fc20004	lw	r2,4(r30)
  798  00001794  ac220004	sw	4(r1),r2
  799  00001798  0ffffe5c	jal	_dstrcpy
  800  0000179c  54000000	nop; delay slot nop
  801  000017a0  23bd0008	addi	r29,r29,#8
  802  000017a4  8fc1fff4	lw	r1,-12(r30)
  803  000017a8  08000004	j	L20_LF2
  804  000017ac  54000000	nop; delay slot nop
  805  000017b0          	L20_LF2:
  806  000017b0  8fa20000	lw	r2,0(r29)
  807  000017b4  8fdffff8	lw	r31,-8(r30)
  808  000017b8  001ee820	add	r29,r0,r30
  809  000017bc  8fdefffc	lw	r30,-4(r30)
  810  000017c0  4be00000	jr	r31
  811  000017c4  54000000	nop
  812  000017c8          	.endproc _dstrcat
  813  000017c8          	.align 2
  814  000017c8          	.proc _dstrncmp
  815  000017c8          	.global _dstrncmp
  816  000017c8          	_dstrncmp:
  817                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  818  000017c8  afbefffc	sw	-4(r29),r30; push fp
  819  000017cc  001df020	add	r30,r0,r29; fp = sp
  820  000017d0  afbffff8	sw	-8(r29),r31; push ret addr
  821  000017d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  822  000017d8  afa20000	sw	0(r29),r2
  823  000017dc  afa30004	sw	4(r29),r3
  824  000017e0  54000000	nop
  825  000017e4  20010000	addi	r1,r0,#0
  826  000017e8  afc1fff4	sw	-12(r30),r1
  827  000017ec          	L25_LF2:
  828  000017ec  8fc1fff4	lw	r1,-12(r30)
  829  000017f0  8fc20008	lw	r2,8(r30)
  830  000017f4  0022082a	slt	r1,r1,r2
  831  000017f8  1420000c	bnez	r1,L28_LF2
  832  000017fc  54000000	nop; delay slot nop
  833  00001800  08000088	j	L26_LF2
  834  00001804  54000000	nop; delay slot nop
  835  00001808          	L28_LF2:
  836  00001808  8fc10004	lw	r1,4(r30)
  837  0000180c  90220000	lbu	r2,(r1)
  838  00001810  64410000	snei	r1,r2,#0
  839  00001814  14200018	bnez	r1,L29_LF2
  840  00001818  54000000	nop; delay slot nop
  841  0000181c  20010000	addi	r1,r0,#0
  842  00001820  080000d8	j	L24_LF2
  843  00001824  54000000	nop; delay slot nop
  844  00001828  08000028	j	L30_LF2
  845  0000182c  54000000	nop; delay slot nop
  846  00001830          	L29_LF2:
  847  00001830  8fc10000	lw	r1,(r30)
  848  00001834  8fc20004	lw	r2,4(r30)
  849  00001838  90210000	lbu	r1,(r1)
  850  0000183c  90420000	lbu	r2,(r2)
  851  00001840  00220829	sne	r1,r1,r2
  852  00001844  1020000c	beqz	r1,L30_LF2
  853  00001848  54000000	nop; delay slot nop
  854  0000184c  0800003c	j	L26_LF2
  855  00001850  54000000	nop; delay slot nop
  856  00001854          	L31_LF2:
  857  00001854          	L30_LF2:
  858  00001854  8fc20000	lw	r2,(r30)
  859  00001858  20410001	addi	r1,r2,#1
  860  0000185c  00011020	add	r2,r0,r1
  861  00001860  afc20000	sw	(r30),r2
  862  00001864  8fc20004	lw	r2,4(r30)
  863  00001868  20410001	addi	r1,r2,#1
  864  0000186c  00011020	add	r2,r0,r1
  865  00001870  afc20004	sw	4(r30),r2
  866  00001874          	L27_LF2:
  867  00001874  8fc2fff4	lw	r2,-12(r30)
  868  00001878  20410001	addi	r1,r2,#1
  869  0000187c  00011020	add	r2,r0,r1
  870  00001880  afc2fff4	sw	-12(r30),r2
  871  00001884  0bffff64	j	L25_LF2
  872  00001888  54000000	nop; delay slot nop
  873  0000188c          	L26_LF2:
  874  0000188c  8fc1fff4	lw	r1,-12(r30)
  875  00001890  8fc20008	lw	r2,8(r30)
  876  00001894  00220828	seq	r1,r1,r2
  877  00001898  10200018	beqz	r1,L32_LF2
  878  0000189c  54000000	nop; delay slot nop
  879  000018a0  20010000	addi	r1,r0,#0
  880  000018a4  08000054	j	L24_LF2
  881  000018a8  54000000	nop; delay slot nop
  882  000018ac  0800004c	j	L33_LF2
  883  000018b0  54000000	nop; delay slot nop
  884  000018b4          	L32_LF2:
  885  000018b4  8fc20000	lw	r2,(r30)
  886  000018b8  90410000	lbu	r1,(r2)
  887  000018bc  8fc20004	lw	r2,4(r30)
  888  000018c0  90430000	lbu	r3,(r2)
  889  000018c4  00230822	sub	r1,r1,r3
  890  000018c8  74220000	sgei	r2,r1,#0
  891  000018cc  10400020	beqz	r2,L34_LF2
  892  000018d0  54000000	nop; delay slot nop
  893  000018d4  8fc10000	lw	r1,(r30)
  894  000018d8  8fc20004	lw	r2,4(r30)
  895  000018dc  90210000	lbu	r1,(r1)
  896  000018e0  90420000	lbu	r2,(r2)
  897  000018e4  00220829	sne	r1,r1,r2
  898  000018e8  08000008	j	L35_LF2
  899  000018ec  54000000	nop; delay slot nop
  900  000018f0          	L34_LF2:
  901  000018f0  2001ffff	addi	r1,r0,#-1
  902  000018f4          	L35_LF2:
  903  000018f4  08000004	j	L24_LF2
  904  000018f8  54000000	nop; delay slot nop
  905  000018fc          	L33_LF2:
  906  000018fc          	L24_LF2:
  907  000018fc  8fa20000	lw	r2,0(r29)
  908  00001900  8fa30004	lw	r3,4(r29)
  909  00001904  8fdffff8	lw	r31,-8(r30)
  910  00001908  001ee820	add	r29,r0,r30
  911  0000190c  8fdefffc	lw	r30,-4(r30)
  912  00001910  4be00000	jr	r31
  913  00001914  54000000	nop
  914  00001918          	.endproc _dstrncmp
  915  00001918          	.align 2
  916  00001918          	.proc _dstrlen
  917  00001918          	.global _dstrlen
  918  00001918          	_dstrlen:
  919                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  920  00001918  afbefffc	sw	-4(r29),r30; push fp
  921  0000191c  001df020	add	r30,r0,r29; fp = sp
  922  00001920  afbffff8	sw	-8(r29),r31; push ret addr
  923  00001924  2fbd0018	subui	r29,r29,#24; alloc local storage
  924  00001928  afa20000	sw	0(r29),r2
  925  0000192c  20010000	addi	r1,r0,#0
  926  00001930  afc1fff4	sw	-12(r30),r1
  927  00001934          	L37_LF2:
  928  00001934  8fc10000	lw	r1,(r30)
  929  00001938  20220001	addi	r2,r1,#1
  930  0000193c  afc20000	sw	(r30),r2
  931  00001940  90210000	lbu	r1,(r1)
  932  00001944  64220000	snei	r2,r1,#0
  933  00001948  1440000c	bnez	r2,L39_LF2
  934  0000194c  54000000	nop; delay slot nop
  935  00001950  0800001c	j	L38_LF2
  936  00001954  54000000	nop; delay slot nop
  937  00001958          	L39_LF2:
  938  00001958  8fc2fff4	lw	r2,-12(r30)
  939  0000195c  20410001	addi	r1,r2,#1
  940  00001960  00011020	add	r2,r0,r1
  941  00001964  afc2fff4	sw	-12(r30),r2
  942  00001968  0bffffc8	j	L37_LF2
  943  0000196c  54000000	nop; delay slot nop
  944  00001970          	L38_LF2:
  945  00001970  8fc1fff4	lw	r1,-12(r30)
  946  00001974  08000004	j	L36_LF2
  947  00001978  54000000	nop; delay slot nop
  948  0000197c          	L36_LF2:
  949  0000197c  8fa20000	lw	r2,0(r29)
  950  00001980  8fdffff8	lw	r31,-8(r30)
  951  00001984  001ee820	add	r29,r0,r30
  952  00001988  8fdefffc	lw	r30,-4(r30)
  953  0000198c  4be00000	jr	r31
  954  00001990  54000000	nop
  955  00001994          	.endproc _dstrlen
  956  00001994          	.align 2
  957  00001994          	.proc _dstrstr
  958  00001994          	.global _dstrstr
  959  00001994          	_dstrstr:
  960                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  961  00001994  afbefffc	sw	-4(r29),r30; push fp
  962  00001998  001df020	add	r30,r0,r29; fp = sp
  963  0000199c  afbffff8	sw	-8(r29),r31; push ret addr
  964  000019a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  965  000019a4  afa20000	sw	0(r29),r2
  966  000019a8  23bdfff8	addi	r29,r29,#-8
  967  000019ac  001d0820	add	r1,r0,r29
  968  000019b0  8fc20004	lw	r2,4(r30)
  969  000019b4  ac220000	sw	(r1),r2
  970  000019b8  0fffff5c	jal	_dstrlen
  971  000019bc  54000000	nop; delay slot nop
  972  000019c0  23bd0008	addi	r29,r29,#8
  973  000019c4  afc1fff4	sw	-12(r30),r1
  974  000019c8          	L41_LF2:
  975  000019c8  8fc10000	lw	r1,(r30)
  976  000019cc  90220000	lbu	r2,(r1)
  977  000019d0  64410000	snei	r1,r2,#0
  978  000019d4  1420000c	bnez	r1,L43_LF2
  979  000019d8  54000000	nop; delay slot nop
  980  000019dc  08000060	j	L42_LF2
  981  000019e0  54000000	nop; delay slot nop
  982  000019e4          	L43_LF2:
  983  000019e4  23bdfff0	addi	r29,r29,#-16
  984  000019e8  001d0820	add	r1,r0,r29
  985  000019ec  8fc20000	lw	r2,(r30)
  986  000019f0  ac220000	sw	(r1),r2
  987  000019f4  8fc20004	lw	r2,4(r30)
  988  000019f8  ac220004	sw	4(r1),r2
  989  000019fc  8fc2fff4	lw	r2,-12(r30)
  990  00001a00  ac220008	sw	8(r1),r2
  991  00001a04  0ffffdc0	jal	_dstrncmp
  992  00001a08  54000000	nop; delay slot nop
  993  00001a0c  23bd0010	addi	r29,r29,#16
  994  00001a10  64220000	snei	r2,r1,#0
  995  00001a14  14400010	bnez	r2,L44_LF2
  996  00001a18  54000000	nop; delay slot nop
  997  00001a1c  8fc10000	lw	r1,(r30)
  998  00001a20  08000028	j	L40_LF2
  999  00001a24  54000000	nop; delay slot nop
 1000  00001a28          	L44_LF2:
 1001  00001a28  8fc20000	lw	r2,(r30)
 1002  00001a2c  20410001	addi	r1,r2,#1
 1003  00001a30  00011020	add	r2,r0,r1
 1004  00001a34  afc20000	sw	(r30),r2
 1005  00001a38  0bffff8c	j	L41_LF2
 1006  00001a3c  54000000	nop; delay slot nop
 1007  00001a40          	L42_LF2:
 1008  00001a40  20010000	addi	r1,r0,#0
 1009  00001a44  08000004	j	L40_LF2
 1010  00001a48  54000000	nop; delay slot nop
 1011  00001a4c          	L40_LF2:
 1012  00001a4c  8fa20000	lw	r2,0(r29)
 1013  00001a50  8fdffff8	lw	r31,-8(r30)
 1014  00001a54  001ee820	add	r29,r0,r30
 1015  00001a58  8fdefffc	lw	r30,-4(r30)
 1016  00001a5c  4be00000	jr	r31
 1017  00001a60  54000000	nop
 1018  00001a64          	.endproc _dstrstr
 1019  00001a64          	.align 2
 1020  00001a64          	.proc _dmindex
 1021  00001a64          	.global _dmindex
 1022  00001a64          	_dmindex:
 1023                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1024  00001a64  afbefffc	sw	-4(r29),r30; push fp
 1025  00001a68  001df020	add	r30,r0,r29; fp = sp
 1026  00001a6c  afbffff8	sw	-8(r29),r31; push ret addr
 1027  00001a70  2fbd0018	subui	r29,r29,#24; alloc local storage
 1028  00001a74  afa20000	sw	0(r29),r2
 1029  00001a78  54000000	nop
 1030  00001a7c          	L46_LF2:
 1031  00001a7c  8fc10000	lw	r1,(r30)
 1032  00001a80  90220000	lbu	r2,(r1)
 1033  00001a84  64410000	snei	r1,r2,#0
 1034  00001a88  1420000c	bnez	r1,L48_LF2
 1035  00001a8c  54000000	nop; delay slot nop
 1036  00001a90  08000070	j	L47_LF2
 1037  00001a94  54000000	nop; delay slot nop
 1038  00001a98          	L48_LF2:
 1039  00001a98  8fc10004	lw	r1,4(r30)
 1040  00001a9c  afc1fff4	sw	-12(r30),r1
 1041  00001aa0          	L49_LF2:
 1042  00001aa0  8fc1fff4	lw	r1,-12(r30)
 1043  00001aa4  90220000	lbu	r2,(r1)
 1044  00001aa8  64410000	snei	r1,r2,#0
 1045  00001aac  1420000c	bnez	r1,L52_LF2
 1046  00001ab0  54000000	nop; delay slot nop
 1047  00001ab4  08000044	j	L50_LF2
 1048  00001ab8  54000000	nop; delay slot nop
 1049  00001abc          	L52_LF2:
 1050  00001abc  8fc10000	lw	r1,(r30)
 1051  00001ac0  8fc2fff4	lw	r2,-12(r30)
 1052  00001ac4  90210000	lbu	r1,(r1)
 1053  00001ac8  90420000	lbu	r2,(r2)
 1054  00001acc  00220828	seq	r1,r1,r2
 1055  00001ad0  10200010	beqz	r1,L51_LF2
 1056  00001ad4  54000000	nop; delay slot nop
 1057  00001ad8  8fc10000	lw	r1,(r30)
 1058  00001adc  08000030	j	L45_LF2
 1059  00001ae0  54000000	nop; delay slot nop
 1060  00001ae4          	L53_LF2:
 1061  00001ae4          	L51_LF2:
 1062  00001ae4  8fc2fff4	lw	r2,-12(r30)
 1063  00001ae8  20410001	addi	r1,r2,#1
 1064  00001aec  00011020	add	r2,r0,r1
 1065  00001af0  afc2fff4	sw	-12(r30),r2
 1066  00001af4  0bffffa8	j	L49_LF2
 1067  00001af8  54000000	nop; delay slot nop
 1068  00001afc          	L50_LF2:
 1069  00001afc  0bffff7c	j	L46_LF2
 1070  00001b00  54000000	nop; delay slot nop
 1071  00001b04          	L47_LF2:
 1072  00001b04  20010000	addi	r1,r0,#0
 1073  00001b08  08000004	j	L45_LF2
 1074  00001b0c  54000000	nop; delay slot nop
 1075  00001b10          	L45_LF2:
 1076  00001b10  8fa20000	lw	r2,0(r29)
 1077  00001b14  8fdffff8	lw	r31,-8(r30)
 1078  00001b18  001ee820	add	r29,r0,r30
 1079  00001b1c  8fdefffc	lw	r30,-4(r30)
 1080  00001b20  4be00000	jr	r31
 1081  00001b24  54000000	nop
 1082  00001b28          	.endproc _dmindex
 1083  00001b28          	.align 2
 1084  00001b28          	.proc _dindex
 1085  00001b28          	.global _dindex
 1086  00001b28          	_dindex:
 1087                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1088  00001b28  afbefffc	sw	-4(r29),r30; push fp
 1089  00001b2c  001df020	add	r30,r0,r29; fp = sp
 1090  00001b30  afbffff8	sw	-8(r29),r31; push ret addr
 1091  00001b34  2fbd0010	subui	r29,r29,#16; alloc local storage
 1092  00001b38  afa20000	sw	0(r29),r2
 1093  00001b3c  54000000	nop
 1094  00001b40          	L55_LF2:
 1095  00001b40  8fc10000	lw	r1,(r30)
 1096  00001b44  90220000	lbu	r2,(r1)
 1097  00001b48  64410000	snei	r1,r2,#0
 1098  00001b4c  1420000c	bnez	r1,L57_LF2
 1099  00001b50  54000000	nop; delay slot nop
 1100  00001b54  08000040	j	L56_LF2
 1101  00001b58  54000000	nop; delay slot nop
 1102  00001b5c          	L57_LF2:
 1103  00001b5c  8fc10000	lw	r1,(r30)
 1104  00001b60  90220000	lbu	r2,(r1)
 1105  00001b64  8fc10004	lw	r1,4(r30)
 1106  00001b68  00411028	seq	r2,r2,r1
 1107  00001b6c  10400010	beqz	r2,L58_LF2
 1108  00001b70  54000000	nop; delay slot nop
 1109  00001b74  8fc10000	lw	r1,(r30)
 1110  00001b78  08000028	j	L54_LF2
 1111  00001b7c  54000000	nop; delay slot nop
 1112  00001b80          	L58_LF2:
 1113  00001b80  8fc20000	lw	r2,(r30)
 1114  00001b84  20410001	addi	r1,r2,#1
 1115  00001b88  00011020	add	r2,r0,r1
 1116  00001b8c  afc20000	sw	(r30),r2
 1117  00001b90  0bffffac	j	L55_LF2
 1118  00001b94  54000000	nop; delay slot nop
 1119  00001b98          	L56_LF2:
 1120  00001b98  20010000	addi	r1,r0,#0
 1121  00001b9c  08000004	j	L54_LF2
 1122  00001ba0  54000000	nop; delay slot nop
 1123  00001ba4          	L54_LF2:
 1124  00001ba4  8fa20000	lw	r2,0(r29)
 1125  00001ba8  8fdffff8	lw	r31,-8(r30)
 1126  00001bac  001ee820	add	r29,r0,r30
 1127  00001bb0  8fdefffc	lw	r30,-4(r30)
 1128  00001bb4  4be00000	jr	r31
 1129  00001bb8  54000000	nop
 1130  00001bbc          	.endproc _dindex
 1131  00001bbc          	.align 2
 1132  00001bbc          	.proc _ditoa
 1133  00001bbc          	.global _ditoa
 1134  00001bbc          	_ditoa:
 1135                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1136  00001bbc  afbefffc	sw	-4(r29),r30; push fp
 1137  00001bc0  001df020	add	r30,r0,r29; fp = sp
 1138  00001bc4  afbffff8	sw	-8(r29),r31; push ret addr
 1139  00001bc8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1140  00001bcc  afa20000	sw	0(r29),r2
 1141  00001bd0  afa30004	sw	4(r29),r3
 1142  00001bd4  8fc10000	lw	r1,(r30)
 1143  00001bd8  68220000	slti	r2,r1,#0
 1144  00001bdc  1040002c	beqz	r2,L60_LF2
 1145  00001be0  54000000	nop; delay slot nop
 1146  00001be4  8fc10004	lw	r1,4(r30)
 1147  00001be8  20220001	addi	r2,r1,#1
 1148  00001bec  afc20004	sw	4(r30),r2
 1149  00001bf0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1150  00001bf4  a0220000	sb	(r1),r2
 1151  00001bf8  8fc10000	lw	r1,(r30)
 1152  00001bfc  00011022	sub	r2,r0,r1
 1153  00001c00  afc20000	sw	(r30),r2
 1154  00001c04  08000118	j	L61_LF2
 1155  00001c08  54000000	nop; delay slot nop
 1156  00001c0c          	L60_LF2:
 1157  00001c0c  8fc10000	lw	r1,(r30)
 1158  00001c10  64220000	snei	r2,r1,#0
 1159  00001c14  14400020	bnez	r2,L62_LF2
 1160  00001c18  54000000	nop; delay slot nop
 1161  00001c1c  8fc10004	lw	r1,4(r30)
 1162  00001c20  20220001	addi	r2,r1,#1
 1163  00001c24  afc20004	sw	4(r30),r2
 1164  00001c28  20020030	addi	r2,r0,(#0x30)&0xff
 1165  00001c2c  a0220000	sb	(r1),r2
 1166  00001c30  080000ec	j	L61_LF2
 1167  00001c34  54000000	nop; delay slot nop
 1168  00001c38          	L62_LF2:
 1169  00001c38  20010001	addi	r1,r0,#1
 1170  00001c3c  afc1fff4	sw	-12(r30),r1
 1171  00001c40          	L64_LF2:
 1172  00001c40  8fc1fff4	lw	r1,-12(r30)
 1173  00001c44  8fc20000	lw	r2,(r30)
 1174  00001c48  0022082c	sle	r1,r1,r2
 1175  00001c4c  1420000c	bnez	r1,L66_LF2
 1176  00001c50  54000000	nop; delay slot nop
 1177  00001c54  08000024	j	L65_LF2
 1178  00001c58  54000000	nop; delay slot nop
 1179  00001c5c          	L67_LF2:
 1180  00001c5c          	L66_LF2:
 1181  00001c5c  8fc1fff4	lw	r1,-12(r30)
 1182  00001c60  00011820	add	r3,r0,r1
 1183  00001c64  50620002	slli	r2,r3,#0x2
 1184  00001c68  00411020	add	r2,r2,r1
 1185  00001c6c  50410001	slli	r1,r2,#0x1
 1186  00001c70  afc1fff4	sw	-12(r30),r1
 1187  00001c74  0bffffc8	j	L64_LF2
 1188  00001c78  54000000	nop; delay slot nop
 1189  00001c7c          	L65_LF2:
 1190  00001c7c  54000000	nop
 1191  00001c80          	L68_LF2:
 1192  00001c80  8fc1fff4	lw	r1,-12(r30)
 1193  00001c84  2002000a	addi	r2,r0,#10
 1194  00001c88  00200035	movi2fp	f0,r1
 1195  00001c8c  00400835	movi2fp	f1,r2
 1196  00001c90  0401000f	div	f0,f0,f1
 1197  00001c94  00000834	movfp2i	r1,f0
 1198  00001c98  afc1fff4	sw	-12(r30),r1
 1199  00001c9c  8fc10004	lw	r1,4(r30)
 1200  00001ca0  20220001	addi	r2,r1,#1
 1201  00001ca4  afc20004	sw	4(r30),r2
 1202  00001ca8  8fc20000	lw	r2,(r30)
 1203  00001cac  8fc3fff4	lw	r3,-12(r30)
 1204  00001cb0  00400035	movi2fp	f0,r2
 1205  00001cb4  00600835	movi2fp	f1,r3
 1206  00001cb8  0401000f	div	f0,f0,f1
 1207  00001cbc  00001034	movfp2i	r2,f0
 1208  00001cc0  00021820	add	r3,r0,r2
 1209  00001cc4  20620030	addi	r2,r3,#48
 1210  00001cc8  a0220000	sb	(r1),r2
 1211  00001ccc  8fc10000	lw	r1,(r30)
 1212  00001cd0  8fc3fff4	lw	r3,-12(r30)
 1213  00001cd4  00200035	movi2fp	f0,r1
 1214  00001cd8  00600835	movi2fp	f1,r3
 1215  00001cdc  0401000f	div	f0,f0,f1
 1216  00001ce0  00001034	movfp2i	r2,f0
 1217  00001ce4  8fc3fff4	lw	r3,-12(r30)
 1218  00001ce8  00400035	movi2fp	f0,r2
 1219  00001cec  00600835	movi2fp	f1,r3
 1220  00001cf0  0401000e	mult	f0,f0,f1
 1221  00001cf4  00001034	movfp2i	r2,f0
 1222  00001cf8  00220822	sub	r1,r1,r2
 1223  00001cfc  afc10000	sw	(r30),r1
 1224  00001d00          	L70_LF2:
 1225  00001d00  8fc1fff4	lw	r1,-12(r30)
 1226  00001d04  6c220001	sgti	r2,r1,#1
 1227  00001d08  1440000c	bnez	r2,L71_LF2
 1228  00001d0c  54000000	nop; delay slot nop
 1229  00001d10  0800000c	j	L61_LF2
 1230  00001d14  54000000	nop; delay slot nop
 1231  00001d18          	L71_LF2:
 1232  00001d18  0bffff64	j	L68_LF2
 1233  00001d1c  54000000	nop; delay slot nop
 1234  00001d20          	L69_LF2:
 1235  00001d20          	L63_LF2:
 1236  00001d20          	L61_LF2:
 1237  00001d20  8fc10004	lw	r1,4(r30)
 1238  00001d24  20020000	addi	r2,r0,(#0x0)&0xff
 1239  00001d28  a0220000	sb	(r1),r2
 1240  00001d2c          	L59_LF2:
 1241  00001d2c  8fa20000	lw	r2,0(r29)
 1242  00001d30  8fa30004	lw	r3,4(r29)
 1243  00001d34  8fdffff8	lw	r31,-8(r30)
 1244  00001d38  001ee820	add	r29,r0,r30
 1245  00001d3c  8fdefffc	lw	r30,-4(r30)
 1246  00001d40  4be00000	jr	r31
 1247  00001d44  54000000	nop
 1248  00001d48          	.endproc _ditoa
 1249  00001d48          	.align 2
 1250  00001d48          	.proc _dstrtol
 1251  00001d48          	.global _dstrtol
 1252  00001d48          	_dstrtol:
 1253                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1254  00001d48  afbefffc	sw	-4(r29),r30; push fp
 1255  00001d4c  001df020	add	r30,r0,r29; fp = sp
 1256  00001d50  afbffff8	sw	-8(r29),r31; push ret addr
 1257  00001d54  2fbd0020	subui	r29,r29,#32; alloc local storage
 1258  00001d58  afa20000	sw	0(r29),r2
 1259  00001d5c  20010000	addi	r1,r0,#0
 1260  00001d60  afc1fff4	sw	-12(r30),r1
 1261  00001d64          	L73_LF2:
 1262  00001d64  8fc10000	lw	r1,(r30)
 1263  00001d68  90220000	lbu	r2,(r1)
 1264  00001d6c  60410020	seqi	r1,r2,#32
 1265  00001d70  14200034	bnez	r1,L75_LF2
 1266  00001d74  54000000	nop; delay slot nop
 1267  00001d78  8fc10000	lw	r1,(r30)
 1268  00001d7c  90220000	lbu	r2,(r1)
 1269  00001d80  60410009	seqi	r1,r2,#9
 1270  00001d84  14200020	bnez	r1,L75_LF2
 1271  00001d88  54000000	nop; delay slot nop
 1272  00001d8c  8fc10000	lw	r1,(r30)
 1273  00001d90  90220000	lbu	r2,(r1)
 1274  00001d94  6041000a	seqi	r1,r2,#10
 1275  00001d98  1420000c	bnez	r1,L75_LF2
 1276  00001d9c  54000000	nop; delay slot nop
 1277  00001da0  0800001c	j	L74_LF2
 1278  00001da4  54000000	nop; delay slot nop
 1279  00001da8          	L75_LF2:
 1280  00001da8  8fc20000	lw	r2,(r30)
 1281  00001dac  20410001	addi	r1,r2,#1
 1282  00001db0  00011020	add	r2,r0,r1
 1283  00001db4  afc20000	sw	(r30),r2
 1284  00001db8  0bffffa8	j	L73_LF2
 1285  00001dbc  54000000	nop; delay slot nop
 1286  00001dc0          	L74_LF2:
 1287  00001dc0  8fc10004	lw	r1,4(r30)
 1288  00001dc4  64220000	snei	r2,r1,#0
 1289  00001dc8  10400010	beqz	r2,L76_LF2
 1290  00001dcc  54000000	nop; delay slot nop
 1291  00001dd0  8fc10004	lw	r1,4(r30)
 1292  00001dd4  8fc20000	lw	r2,(r30)
 1293  00001dd8  ac220000	sw	(r1),r2
 1294  00001ddc          	L76_LF2:
 1295  00001ddc  8fc10000	lw	r1,(r30)
 1296  00001de0  90220000	lbu	r2,(r1)
 1297  00001de4  64410000	snei	r1,r2,#0
 1298  00001de8  14200010	bnez	r1,L77_LF2
 1299  00001dec  54000000	nop; delay slot nop
 1300  00001df0  8fc1fff4	lw	r1,-12(r30)
 1301  00001df4  08000294	j	L72_LF2
 1302  00001df8  54000000	nop; delay slot nop
 1303  00001dfc          	L77_LF2:
 1304  00001dfc  8fc10000	lw	r1,(r30)
 1305  00001e00  90220000	lbu	r2,(r1)
 1306  00001e04  6041002d	seqi	r1,r2,#45
 1307  00001e08  10200024	beqz	r1,L78_LF2
 1308  00001e0c  54000000	nop; delay slot nop
 1309  00001e10  2001ffff	addi	r1,r0,#-1
 1310  00001e14  afc1ffec	sw	-20(r30),r1
 1311  00001e18  8fc20000	lw	r2,(r30)
 1312  00001e1c  20410001	addi	r1,r2,#1
 1313  00001e20  00011020	add	r2,r0,r1
 1314  00001e24  afc20000	sw	(r30),r2
 1315  00001e28  0800000c	j	L79_LF2
 1316  00001e2c  54000000	nop; delay slot nop
 1317  00001e30          	L78_LF2:
 1318  00001e30  20010001	addi	r1,r0,#1
 1319  00001e34  afc1ffec	sw	-20(r30),r1
 1320  00001e38          	L79_LF2:
 1321  00001e38  8fc10008	lw	r1,8(r30)
 1322  00001e3c  64220000	snei	r2,r1,#0
 1323  00001e40  14400090	bnez	r2,L80_LF2
 1324  00001e44  54000000	nop; delay slot nop
 1325  00001e48  8fc10000	lw	r1,(r30)
 1326  00001e4c  90220000	lbu	r2,(r1)
 1327  00001e50  60410030	seqi	r1,r2,#48
 1328  00001e54  10200074	beqz	r1,L81_LF2
 1329  00001e58  54000000	nop; delay slot nop
 1330  00001e5c  8fc20000	lw	r2,(r30)
 1331  00001e60  20410001	addi	r1,r2,#1
 1332  00001e64  00011020	add	r2,r0,r1
 1333  00001e68  afc20000	sw	(r30),r2
 1334  00001e6c  8fc10000	lw	r1,(r30)
 1335  00001e70  90220000	lbu	r2,(r1)
 1336  00001e74  60410078	seqi	r1,r2,#120
 1337  00001e78  14200020	bnez	r1,L83_LF2
 1338  00001e7c  54000000	nop; delay slot nop
 1339  00001e80  8fc10000	lw	r1,(r30)
 1340  00001e84  90220000	lbu	r2,(r1)
 1341  00001e88  60410058	seqi	r1,r2,#88
 1342  00001e8c  1420000c	bnez	r1,L83_LF2
 1343  00001e90  54000000	nop; delay slot nop
 1344  00001e94  08000024	j	L82_LF2
 1345  00001e98  54000000	nop; delay slot nop
 1346  00001e9c          	L83_LF2:
 1347  00001e9c  20010010	addi	r1,r0,#16
 1348  00001ea0  afc10008	sw	8(r30),r1
 1349  00001ea4  8fc20000	lw	r2,(r30)
 1350  00001ea8  20410001	addi	r1,r2,#1
 1351  00001eac  00011020	add	r2,r0,r1
 1352  00001eb0  afc20000	sw	(r30),r2
 1353  00001eb4  0800000c	j	L84_LF2
 1354  00001eb8  54000000	nop; delay slot nop
 1355  00001ebc          	L82_LF2:
 1356  00001ebc  20010008	addi	r1,r0,#8
 1357  00001ec0  afc10008	sw	8(r30),r1
 1358  00001ec4          	L84_LF2:
 1359  00001ec4  0800000c	j	L80_LF2
 1360  00001ec8  54000000	nop; delay slot nop
 1361  00001ecc          	L81_LF2:
 1362  00001ecc  2001000a	addi	r1,r0,#10
 1363  00001ed0  afc10008	sw	8(r30),r1
 1364  00001ed4          	L85_LF2:
 1365  00001ed4          	L80_LF2:
 1366  00001ed4  8fc10008	lw	r1,8(r30)
 1367  00001ed8  70220000	slei	r2,r1,#0
 1368  00001edc  1440001c	bnez	r2,L87_LF2
 1369  00001ee0  54000000	nop; delay slot nop
 1370  00001ee4  8fc10008	lw	r1,8(r30)
 1371  00001ee8  6c220010	sgti	r2,r1,#16
 1372  00001eec  1440000c	bnez	r2,L87_LF2
 1373  00001ef0  54000000	nop; delay slot nop
 1374  00001ef4  08000010	j	L86_LF2
 1375  00001ef8  54000000	nop; delay slot nop
 1376  00001efc          	L87_LF2:
 1377  00001efc  8fc1fff4	lw	r1,-12(r30)
 1378  00001f00  08000188	j	L72_LF2
 1379  00001f04  54000000	nop; delay slot nop
 1380  00001f08          	L86_LF2:
 1381  00001f08  54000000	nop
 1382  00001f0c          	L88_LF2:
 1383  00001f0c  8fc10000	lw	r1,(r30)
 1384  00001f10  90220000	lbu	r2,(r1)
 1385  00001f14  6c41002f	sgtui	r1,r2,#47
 1386  00001f18  10200030	beqz	r1,L91_LF2
 1387  00001f1c  54000000	nop; delay slot nop
 1388  00001f20  8fc10000	lw	r1,(r30)
 1389  00001f24  90220000	lbu	r2,(r1)
 1390  00001f28  70410039	sleui	r1,r2,#57
 1391  00001f2c  1020001c	beqz	r1,L91_LF2
 1392  00001f30  54000000	nop; delay slot nop
 1393  00001f34  8fc10000	lw	r1,(r30)
 1394  00001f38  90220000	lbu	r2,(r1)
 1395  00001f3c  2041ffd0	addi	r1,r2,#-48
 1396  00001f40  afc1fff0	sw	-16(r30),r1
 1397  00001f44  0800008c	j	L92_LF2
 1398  00001f48  54000000	nop; delay slot nop
 1399  00001f4c          	L91_LF2:
 1400  00001f4c  8fc10000	lw	r1,(r30)
 1401  00001f50  90220000	lbu	r2,(r1)
 1402  00001f54  6c410060	sgtui	r1,r2,#96
 1403  00001f58  10200030	beqz	r1,L93_LF2
 1404  00001f5c  54000000	nop; delay slot nop
 1405  00001f60  8fc10000	lw	r1,(r30)
 1406  00001f64  90220000	lbu	r2,(r1)
 1407  00001f68  7041007a	sleui	r1,r2,#122
 1408  00001f6c  1020001c	beqz	r1,L93_LF2
 1409  00001f70  54000000	nop; delay slot nop
 1410  00001f74  8fc10000	lw	r1,(r30)
 1411  00001f78  90220000	lbu	r2,(r1)
 1412  00001f7c  2041ffa9	addi	r1,r2,#-87
 1413  00001f80  afc1fff0	sw	-16(r30),r1
 1414  00001f84  0800004c	j	L92_LF2
 1415  00001f88  54000000	nop; delay slot nop
 1416  00001f8c          	L93_LF2:
 1417  00001f8c  8fc10000	lw	r1,(r30)
 1418  00001f90  90220000	lbu	r2,(r1)
 1419  00001f94  6c410040	sgtui	r1,r2,#64
 1420  00001f98  10200030	beqz	r1,L95_LF2
 1421  00001f9c  54000000	nop; delay slot nop
 1422  00001fa0  8fc10000	lw	r1,(r30)
 1423  00001fa4  90220000	lbu	r2,(r1)
 1424  00001fa8  7041005a	sleui	r1,r2,#90
 1425  00001fac  1020001c	beqz	r1,L95_LF2
 1426  00001fb0  54000000	nop; delay slot nop
 1427  00001fb4  8fc10000	lw	r1,(r30)
 1428  00001fb8  90220000	lbu	r2,(r1)
 1429  00001fbc  2041ffc9	addi	r1,r2,#-55
 1430  00001fc0  afc1fff0	sw	-16(r30),r1
 1431  00001fc4  0800000c	j	L92_LF2
 1432  00001fc8  54000000	nop; delay slot nop
 1433  00001fcc          	L95_LF2:
 1434  00001fcc  200103e8	addi	r1,r0,#1000
 1435  00001fd0  afc1fff0	sw	-16(r30),r1
 1436  00001fd4          	L96_LF2:
 1437  00001fd4          	L94_LF2:
 1438  00001fd4          	L92_LF2:
 1439  00001fd4  8fc1fff0	lw	r1,-16(r30)
 1440  00001fd8  8fc20008	lw	r2,8(r30)
 1441  00001fdc  0022082a	slt	r1,r1,r2
 1442  00001fe0  10200040	beqz	r1,L90_LF2
 1443  00001fe4  54000000	nop; delay slot nop
 1444  00001fe8  8fc1fff4	lw	r1,-12(r30)
 1445  00001fec  8fc20008	lw	r2,8(r30)
 1446  00001ff0  00200035	movi2fp	f0,r1
 1447  00001ff4  00400835	movi2fp	f1,r2
 1448  00001ff8  0401000e	mult	f0,f0,f1
 1449  00001ffc  00000834	movfp2i	r1,f0
 1450  00002000  afc1fff4	sw	-12(r30),r1
 1451  00002004  8fc1fff4	lw	r1,-12(r30)
 1452  00002008  8fc2fff0	lw	r2,-16(r30)
 1453  0000200c  00220820	add	r1,r1,r2
 1454  00002010  afc1fff4	sw	-12(r30),r1
 1455  00002014  8fc20000	lw	r2,(r30)
 1456  00002018  20410001	addi	r1,r2,#1
 1457  0000201c  00011020	add	r2,r0,r1
 1458  00002020  afc20000	sw	(r30),r2
 1459  00002024          	L97_LF2:
 1460  00002024          	L90_LF2:
 1461  00002024  8fc1fff0	lw	r1,-16(r30)
 1462  00002028  8fc20008	lw	r2,8(r30)
 1463  0000202c  0022082a	slt	r1,r1,r2
 1464  00002030  1420000c	bnez	r1,L98_LF2
 1465  00002034  54000000	nop; delay slot nop
 1466  00002038  0800000c	j	L89_LF2
 1467  0000203c  54000000	nop; delay slot nop
 1468  00002040          	L98_LF2:
 1469  00002040  0bfffec8	j	L88_LF2
 1470  00002044  54000000	nop; delay slot nop
 1471  00002048          	L89_LF2:
 1472  00002048  8fc10004	lw	r1,4(r30)
 1473  0000204c  64220000	snei	r2,r1,#0
 1474  00002050  10400010	beqz	r2,L99_LF2
 1475  00002054  54000000	nop; delay slot nop
 1476  00002058  8fc10004	lw	r1,4(r30)
 1477  0000205c  8fc20000	lw	r2,(r30)
 1478  00002060  ac220000	sw	(r1),r2
 1479  00002064          	L99_LF2:
 1480  00002064  8fc1fff4	lw	r1,-12(r30)
 1481  00002068  8fc2ffec	lw	r2,-20(r30)
 1482  0000206c  00200035	movi2fp	f0,r1
 1483  00002070  00400835	movi2fp	f1,r2
 1484  00002074  0401000e	mult	f0,f0,f1
 1485  00002078  00000834	movfp2i	r1,f0
 1486  0000207c  afc1fff4	sw	-12(r30),r1
 1487  00002080  8fc1fff4	lw	r1,-12(r30)
 1488  00002084  08000004	j	L72_LF2
 1489  00002088  54000000	nop; delay slot nop
 1490  0000208c          	L72_LF2:
 1491  0000208c  8fa20000	lw	r2,0(r29)
 1492  00002090  8fdffff8	lw	r31,-8(r30)
 1493  00002094  001ee820	add	r29,r0,r30
 1494  00002098  8fdefffc	lw	r30,-4(r30)
 1495  0000209c  4be00000	jr	r31
 1496  000020a0  54000000	nop
 1497  000020a4          	.endproc _dstrtol
 1498  000020a4          	.align 2
 1499  000020a4          	.proc _bcopy
 1500  000020a4          	.global _bcopy
 1501  000020a4          	_bcopy:
 1502                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1503  000020a4  afbefffc	sw	-4(r29),r30; push fp
 1504  000020a8  001df020	add	r30,r0,r29; fp = sp
 1505  000020ac  afbffff8	sw	-8(r29),r31; push ret addr
 1506  000020b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1507  000020b4  afa20000	sw	0(r29),r2
 1508  000020b8  afa30004	sw	4(r29),r3
 1509  000020bc  54000000	nop
 1510  000020c0          	L101_LF2:
 1511  000020c0  8fc10008	lw	r1,8(r30)
 1512  000020c4  2022ffff	addi	r2,r1,#-1
 1513  000020c8  afc20008	sw	8(r30),r2
 1514  000020cc  6c210000	sgti	r1,r1,#0
 1515  000020d0  1420000c	bnez	r1,L103_LF2
 1516  000020d4  54000000	nop; delay slot nop
 1517  000020d8  0800002c	j	L102_LF2
 1518  000020dc  54000000	nop; delay slot nop
 1519  000020e0          	L103_LF2:
 1520  000020e0  8fc10004	lw	r1,4(r30)
 1521  000020e4  20220001	addi	r2,r1,#1
 1522  000020e8  afc20004	sw	4(r30),r2
 1523  000020ec  8fc20000	lw	r2,(r30)
 1524  000020f0  20430001	addi	r3,r2,#1
 1525  000020f4  afc30000	sw	(r30),r3
 1526  000020f8  80420000	lb	r2,(r2)
 1527  000020fc  a0220000	sb	(r1),r2
 1528  00002100  0bffffbc	j	L101_LF2
 1529  00002104  54000000	nop; delay slot nop
 1530  00002108          	L102_LF2:
 1531  00002108          	L100_LF2:
 1532  00002108  8fa20000	lw	r2,0(r29)
 1533  0000210c  8fa30004	lw	r3,4(r29)
 1534  00002110  8fdffff8	lw	r31,-8(r30)
 1535  00002114  001ee820	add	r29,r0,r30
 1536  00002118  8fdefffc	lw	r30,-4(r30)
 1537  0000211c  4be00000	jr	r31
 1538  00002120  54000000	nop
 1539  00002124          	.endproc _bcopy
 1540  00002124          	.align 2
 1541  00002124          	.proc _bzero
 1542  00002124          	.global _bzero
 1543  00002124          	_bzero:
 1544                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1545  00002124  afbefffc	sw	-4(r29),r30; push fp
 1546  00002128  001df020	add	r30,r0,r29; fp = sp
 1547  0000212c  afbffff8	sw	-8(r29),r31; push ret addr
 1548  00002130  2fbd0010	subui	r29,r29,#16; alloc local storage
 1549  00002134  afa20000	sw	0(r29),r2
 1550  00002138  54000000	nop
 1551  0000213c          	L105_LF2:
 1552  0000213c  8fc10004	lw	r1,4(r30)
 1553  00002140  2022ffff	addi	r2,r1,#-1
 1554  00002144  afc20004	sw	4(r30),r2
 1555  00002148  6c210000	sgti	r1,r1,#0
 1556  0000214c  1420000c	bnez	r1,L107_LF2
 1557  00002150  54000000	nop; delay slot nop
 1558  00002154  08000020	j	L106_LF2
 1559  00002158  54000000	nop; delay slot nop
 1560  0000215c          	L107_LF2:
 1561  0000215c  8fc10000	lw	r1,(r30)
 1562  00002160  20220001	addi	r2,r1,#1
 1563  00002164  afc20000	sw	(r30),r2
 1564  00002168  20020000	addi	r2,r0,(#0x0)&0xff
 1565  0000216c  a0220000	sb	(r1),r2
 1566  00002170  0bffffc8	j	L105_LF2
 1567  00002174  54000000	nop; delay slot nop
 1568  00002178          	L106_LF2:
 1569  00002178          	L104_LF2:
 1570  00002178  8fa20000	lw	r2,0(r29)
 1571  0000217c  8fdffff8	lw	r31,-8(r30)
 1572  00002180  001ee820	add	r29,r0,r30
 1573  00002184  8fdefffc	lw	r30,-4(r30)
 1574  00002188  4be00000	jr	r31
 1575  0000218c  54000000	nop
 1576  00002190          	.endproc _bzero
 1577  00002190          	.align 2
 1578  00002190          	.proc _min
 1579  00002190          	.global _min
 1580  00002190          	_min:
 1581                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1582  00002190  afbefffc	sw	-4(r29),r30; push fp
 1583  00002194  001df020	add	r30,r0,r29; fp = sp
 1584  00002198  afbffff8	sw	-8(r29),r31; push ret addr
 1585  0000219c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1586  000021a0  afa20000	sw	0(r29),r2
 1587  000021a4  afa30004	sw	4(r29),r3
 1588  000021a8  8fc10000	lw	r1,(r30)
 1589  000021ac  8fc20004	lw	r2,4(r30)
 1590  000021b0  0022182c	sle	r3,r1,r2
 1591  000021b4  14600008	bnez	r3,L109_LF2
 1592  000021b8  54000000	nop; delay slot nop
 1593  000021bc  8fc10004	lw	r1,4(r30)
 1594  000021c0          	L109_LF2:
 1595  000021c0  08000004	j	L108_LF2
 1596  000021c4  54000000	nop; delay slot nop
 1597  000021c8          	L108_LF2:
 1598  000021c8  8fa20000	lw	r2,0(r29)
 1599  000021cc  8fa30004	lw	r3,4(r29)
 1600  000021d0  8fdffff8	lw	r31,-8(r30)
 1601  000021d4  001ee820	add	r29,r0,r30
 1602  000021d8  8fdefffc	lw	r30,-4(r30)
 1603  000021dc  4be00000	jr	r31
 1604  000021e0  54000000	nop
 1605  000021e4          	.endproc _min
 1606  000021e4          	.align 2
 1607  000021e4          	.proc _max
 1608  000021e4          	.global _max
 1609  000021e4          	_max:
 1610                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1611  000021e4  afbefffc	sw	-4(r29),r30; push fp
 1612  000021e8  001df020	add	r30,r0,r29; fp = sp
 1613  000021ec  afbffff8	sw	-8(r29),r31; push ret addr
 1614  000021f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1615  000021f4  afa20000	sw	0(r29),r2
 1616  000021f8  afa30004	sw	4(r29),r3
 1617  000021fc  8fc10000	lw	r1,(r30)
 1618  00002200  8fc20004	lw	r2,4(r30)
 1619  00002204  0022182d	sge	r3,r1,r2
 1620  00002208  14600008	bnez	r3,L111_LF2
 1621  0000220c  54000000	nop; delay slot nop
 1622  00002210  8fc10004	lw	r1,4(r30)
 1623  00002214          	L111_LF2:
 1624  00002214  08000004	j	L110_LF2
 1625  00002218  54000000	nop; delay slot nop
 1626  0000221c          	L110_LF2:
 1627  0000221c  8fa20000	lw	r2,0(r29)
 1628  00002220  8fa30004	lw	r3,4(r29)
 1629  00002224  8fdffff8	lw	r31,-8(r30)
 1630  00002228  001ee820	add	r29,r0,r30
 1631  0000222c  8fdefffc	lw	r30,-4(r30)
 1632  00002230  4be00000	jr	r31
 1633  00002234  54000000	nop
 1634  00002238          	.endproc _max
 1635                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1636                      ;;;
 1637                      ;;; Most of the traps are called in files from libtraps.
 1640  00002238          	.align 2
 1641  00002238          	.proc _exit
 1642  00002238          	.global _exit
 1643  00002238          	_exit:
 1644  00002238  44000300	trap	#0x300
 1645  0000223c  4be00000	jr	r31
 1646  00002240  54000000	nop
 1647  00002244          	.endproc _exit
 1649                      ; for the benefit of gcc.
 1650  00002244          	.proc ___main
 1651  00002244          	.global ___main
 1652  00002244          	___main:
 1653  00002244  4be00000	jr	r31
 1654  00002248  54000000	nop
 1655  0000224c          	.endproc ___main
 1656  0000224c          	.text
 1657  0000224c          	.global _etext
 1658  0000224c          	_etext:
 1659  0000224c          	.align 3
 1660  00002250          	.data
 1661  00003220          	.global _edata
 1662  00003220          	_edata:
